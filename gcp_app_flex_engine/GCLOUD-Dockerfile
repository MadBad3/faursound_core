FROM gcr.io/google-appengine/python

# Create a virtualenv for dependencies. This isolates these packages from
# system-level packages.
# Use -p python3 or -p python3.7 to select python version. Default is version 2.
RUN virtualenv -p python3.7 /env

# Setting these environment variables are the same as running
# source /env/bin/activate.
ENV VIRTUAL_ENV /env
ENV PATH /env/bin:$PATH

# Copy the application's requirements.txt and run pip to install all
# dependencies into the virtualenv.
ADD requirements.txt /app/requirements.txt
RUN apt-get update -y
RUN apt-get install -y libsndfile1-dev
RUN pip install -r /app/requirements.txt


# RUN apt-get install libsm6       #this is needed for opencv-python
# RUN apt-get install libsndfile1

# Add the application source code.
ADD . /app
WORKDIR /app

# Run a WSGI server to serve the application. gunicorn must be declared as
# a dependency in requirements.txt.
# CMD gunicorn -b :$PORT app:app


# Run the web service on container startup. Here we use the gunicorn
# webserver, with one worker process and 8 threads.
# For environments with multiple CPU cores, increase the number of workers
# to be equal to the cores available.
# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run to handle instance scaling.
CMD exec gunicorn --bind :$PORT --workers 4 --threads 8 --timeout 0 app:app
